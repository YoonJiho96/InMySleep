version: '3.8'

services:
  mysql:
    image: mysql:8.0.37
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 'j11e107-root'
      MYSQL_DATABASE: 'e107'
      MYSQL_USER: 'dev'
      MYSQL_PASSWORD: 'j11e107-dev'
    ports:
      - "3306:3306"
    volumes:
      - /home/ubuntu/volumes/mysql:/var/lib/mysql
    restart: always

  jenkins:
          #    image: jenkins/jenkins:lts
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    container_name: jenkins
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - /home/ubuntu/volumes/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock # Docker 소켓 마운트
    environment:
      #JAVA_OPTS: '-Djenkins.install.runSetupWizard=false'
      JENKINS_OPTS: '--prefix=/jenkins'
    restart: always
    
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - /home/ubuntu/volumes/prometheus:/prometheus
      - /home/ubuntu/volumes/prometheus/config:/etc/prometheus  # 호스트 경로와 연결
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
        #    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - /home/ubuntu/volumes/grafana:/var/lib/grafana
        #    restart: alway

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - /home/ubuntu/volumes/redis/data:/data
    command: ["redis-server", "--requirepass", "j11e107-redis"]
    restart: always
